package No10_SocketProgramm

/*
	常见的软件架构:
		1. C/S ==> Client/Server ==> 客户端/服务器
			在用户本地需要下载客户端程序, 在远程有一个服务器程序, 用户通过客户端访问服务器
			优点: 画面可以做的非常精美, 用户体验好
			缺点: 需要同时开发客户端和服务端, 开发部署和维护非常麻烦, 并且当服务端更新后, 客户端要同步更新
		2. B/S ==> Browser/Server ==> 浏览器/服务器
			只需要一个浏览器, 用户通过不同的网址, 可以访问不同的服务器, 用户通过浏览器访问服务器
			优点: 不需要客户端, 只需要 前端页面 + 服务端 就可以访问, 开发部署和维护简单
			缺点: 如果应用过大, 会影响用户体验
	网络通信三要素:
        1. ip地址:
            全称 ==> Internet Protocol, 是互联网协议地址, 也称IP地址, 是分配给上网设备的数字标签, 是唯一的
			IPV4:
				全称 ==> Internet Protocol Version 4, 互联网通信协议第4版
				采用32位地址长度, 分成4组, 每组8个比特位, 共有 2^32 个IP
				特殊IP地址:
					127.0.0.1 / localhost: 是回送地址也称作本地回环地址, 也称作本机IP
				常用的CMD命令:
					1. ipconfig: 查看本机IP地址
					2. ping ip: 检查与目标ip网络是否连通
			IPV6:
				全称 ==> Internet Protocol Version 6, 互联网通信协议第6版
				采用128位地址长度, 分成8组, 每组16个比特位, 共有 2^128 个IP
            查看ip地址:
                Linux和mac os: ifconfig 命令
                windows os: ipconfig 命令
            测试网络是否畅通 ==> ping 命令:
                ping ip地址(域名)
                ping本机 ==> ping 127.0.0.1 或 ping localhost 或 ping 本机ip
        2. 端口:
            应用程序在设备中的唯一标识
            每运行一个网络程序都会有一个端口, 想要给对应的程序发送数据, 需要找到对应的端口, 每个端口
            都有一个对应的端口号, 通过端口号可以找到端口
			端口号有65536个, 是一个数字, 从 0-65535, 只有网络程序才有端口号
			端口号分类:
				1. 周知端口: 0-1023, 被预先定义的知名应用占用(如: HTTP占用80, FTP占用21)
				2. 注册端口: 1024- 49151, 分配给用户进程或某些应用程序
							(如: Tomcat占用8080, MySql占用3306)
				3. 动态端口: 49152-65535, 一般不固定分配某种进程, 而是动态分配
				注意: 我们自己开发的程序选择注册端口, 且一个设备中不能出现两个程序的端口号一样,
					  否则会出错
            端口复用:
                用于服务端, 让程序退出时立即释放端口号
        3. 通信协议:
            数据在网络中传输的规则, 常见的有UDP、TCP、http、Https、ftp等
*/
